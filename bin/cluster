#!/usr/bin/env ruby

require 'optparse'
require 'rubygems'
require 'aws-sdk'


options = {'tag' => 'role', 'user' => 'ec2-user'}
opt_parser = OptionParser.new do |opts|
  opts.banner = "Usage: cluster [-t TAG] [-l USER] [-k KEY -s SECRET] [-r region] [-o SSH_OPTIONS] -v VALUES"

  opts.on("-l", "--login [USER]", "Log in with this user (default: #{options['user']}") do |opt|
    options['user'] = opt
  end

  opts.on("-t", "--tag [TAG]", "TAG to filter on (default: #{options['tag']}") do |opt|
    options['tag'] = opt
  end

  opts.on("-v", "--values [VALUES]", Array, "a comma separated (no spaces) list of values to match against (i.e. web,database)") do |opt|
    options['values'] = opt
  end

  opts.on("-k", "--access-key [KEY]", "AWS access key") do |opt|
    options['aws_access_key'] = opt
  end

  opts.on("-s", "--secret-key [SECRET]", "AWS secret key") do |opt|
    options['aws_secret_key'] = opt
  end

  opts.on("-r", "--region [REGION]", "AWS region") do |opt|
    options['region'] = opt
  end

  #Allow -o to be passed to give specific ssh options
  opts.on("-o", "--options [SSH_OPTIONS]", "ssh options to pass directly to cssh") do |opt|
    options['SSH_OPTIONS'] = opt
  end

  #if no arguments are passed, print the help information and quit
  if ARGV.length == 0
    print opts.help()
    exit
  end

end.parse!


if !options['aws_secret_key'].nil? && !options['aws_access_key'].nil?
  AWS.config(access_key_id: options['aws_access_key'], secret_access_key: options['aws_secret_key'])
end

if !options['region'].nil?
  AWS.config(region: options['region'])
end


ec2 = AWS.ec2
dns = ec2.instances.tagged(options['tag']).tagged_values(options['values']).map{|instance| instance.dns_name}

cssh = (/darwin/ =~ RUBY_PLATFORM) ? 'csshX' : 'cssh'

# if options contain '-l' to specify user, and user is set, then don't specify user on the command
if (options['SSH_OPTIONS'] =~ /\-l/) && (!options['user'].nil?)
  exec "#{cssh} -o\"#{options['SSH_OPTIONS']}\"  #{dns.join ' '}"
else 
  exec "#{cssh} -l #{options['user']} -o\"#{options['SSH_OPTIONS']}\"  #{dns.join ' '}"
end
